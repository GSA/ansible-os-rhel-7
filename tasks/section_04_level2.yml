---

  - name: 4.5.1 Check if the grub config file exists (Not Scored)
    stat: path=/etc/default/grub
    register: grub_cfg_file
    tags:
      - section4
      - section4.5

  - name: 4.5.2 Determines if AppArmor is set in grub config (Not Scored)
    command: "grep 'GRUB_CMDLINE_LINUX' /etc/default/grub"
    register: grub_apparmor
    changed_when: False
    when: grub_cfg_file.stat.exists
    always_run: True
    tags:
      - section4
      - section4.5

  - name: 4.5.3 Check if the extlinux config file exists (Not Scored)
    stat: path=/extlinux.conf
    register: extlinux_cfg_file
    tags:
      - section4
      - section4.5

  - name: 4.5.4 Determines if AppArmor is set in extlinux (Not Scored)
    command: "grep 'apparmor' /extlinux.conf"
    register: extlinux_apparmor
    changed_when: False
    when: extlinux_cfg_file.stat.exists
    always_run: True
    tags:
      - section4
      - section4.5

  - name: 4.5.5 Determines if AppArmor is already set in boot config (Not Scored)
    command: "grep CONFIG_DEFAULT_SECURITY_APPARMOR /boot/config-{{ ansible_kernel }}"
    register: boot_apparmor
    changed_when: False
    always_run: True
    #FIXME
    ignore_errors: yes
    tags:
      - section4
      - section4.5

  - name: 4.5.6 Activate AppArmor (install) (Scored)
    apt: >
        name=apparmor
        state=present
    when: use_apparmor == True
    #FIXME
    ignore_errors: True
    tags:
      - section4
      - section4.5

  - name: 4.5.7 Activate AppArmor (Kernel LSM - grub) (Scored)
    lineinfile: >
        dest='/etc/default/grub'
        regexp='^GRUB_CMDLINE_LINUX=""'
        line='GRUB_CMDLINE_LINUX=apparmor="1 security=apparmor"'
        state=present
    when: "(use_apparmor == True) and grub_cfg_file.stat.exists and ('apparmor' not in grub_apparmor['stdout']) and ('not set' in boot_apparmor['stdout'])"
    #FIXME
    ignore_errors: True
    tags:
      - section4
      - section4.5

  - name: 4.5.8 Activate AppArmor (Kernel LSM - extlinux) (Scored)
    lineinfile: >
        dest='/extlinux.conf'
        regexp="^append initrd="
        line="append initrd={{ ansible_cmdline['initrd'] }} root={{ ansible_cmdline['root'] }} console=tty0 console={{ ansible_cmdline['console'] }} apparmor=1 security=apparmor ro quiet"
    when: "(use_apparmor == True) and extlinux_cfg_file.stat.exists and ('apparmor' not in extlinux_apparmor['stdout']) and ('not set' in boot_cfg_apparmor['stdout'])"
    #FIXME
    ignore_errors: True
    tags:
      - section4
      - section4.5

  - name: 4.5.9 Activate AppArmor (start) (Scored)
    service: >
        name=apparmor
        state=started
    when: use_apparmor == True
    register: apparmor_status
    #FIXME
    ignore_errors: True
    tags:
      - section4
      - section4.5

  - name: 4.5.10 Determine if AppArmor started without error (Not Scored)
    fail: msg="Apparmor can not be started. This is normal behavior if you run the playbook for the first time.\nPlease reboot the machine and run it again to proceed with the rest of the playbook."
    when: apparmor_status.failed is defined
    #FIXME
    ignore_errors: True    

  - name: 4.5.11 Fix rsyslog /run/utmp permissions (Not Scored)
    lineinfile: >
        dest="/etc/apparmor.d/usr.sbin.rsyslogd"
        line="  /run/utmp rk,"
        insertbefore="  /var/spool/rsyslog/ r,"
        state=present
    when: use_apparmor == True
    #FIXME
    ignore_errors: True    
    tags:
      - section4
      - section4.5

  - name: 4.5.12 Activate AppArmor (fix profiles) (Scored)
    service: >
        name=rsyslog
        state=restarted
    changed_when: False
    when: use_apparmor == True
    #FIXME
    ignore_errors: True    
    tags:
      - section4
      - section4.5

  - name: 4.5.13 Activate AppArmor (Scored)
    command: apparmor_status
    register: aa_status_lines
    failed_when: '"0 profiles are loaded" in aa_status_lines.stdout_lines or "0 processes are in complain mode." not in aa_status_lines.stdout_lines or "0 processes are unconfined but have a profile defined." not in aa_status_lines.stdout_lines'
        # - '"0 processes are unconfined but have a profile defined." not in aa_status_lines.stdout_lines'
    changed_when: False
    when: use_apparmor == True
    #FIXME
    ignore_errors: True    
    tags:
      - section4
      - section4.5

  - name: 4.5.14 Activate AppArmor (enforce install) (Scored)
    apt: >
        name=apparmor-utils
        state=present
    when: use_apparmor == True
    #FIXME
    ignore_errors: True    
    tags:
      - section4
      - section4.5

  - name: 4.5.15 Activate AppArmor (enforce) (Scored)
    #shell: 'aa-enforce /etc/apparmor.d/*'
    shell: for profile in /etc/apparmor.d/*; do aa-enforce $profile; done
    register: aaenforce_rc
    failed_when: aaenforce_rc.rc == 1
    changed_when: False
    when: use_apparmor == True
    #FIXME
    ignore_errors: True    
    tags:
      - section4
      - section4.5
