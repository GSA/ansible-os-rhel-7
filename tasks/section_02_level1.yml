---

  - name: 2.1 Create Separate Partition for /tmp (Scored)
    command: grep '\s/tmp\s' /etc/fstab
    register: tmp_partition
    when: partitioning == True
    failed_when: tmp_partition.rc == 1
    changed_when: False
    ignore_errors: True
    tags:
      - section2
      - section2.1

  - name: 2.2 - 4 Set nodev, nosuid, noexec Options for /tmp Partition (Scored)
    mount: name="/tmp" src="/tmp" state="mounted" opts="defaults,nodev,nosuid,noexec" fstype=ext4
    when: partitioning == True
    tags:
      - section2
      - section2.2
      - section2.3
      - section2.4

  - name: 2.5 Create Separate Partition for /var (Scored)
    command: grep '\s/var\s' /etc/fstab
    when: partitioning == True
    register: var_partition
    failed_when: var_partition.rc == 1
    changed_when: False
    ignore_errors: True
    tags:
      - section2
      - section2.5

  - name: 2.6 Bind Mount the /var/tmp directory to /tmp (Scored)
    mount: name="/var/tmp" src="/tmp" opts=bind state=mounted fstype=ext4
    when: partitioning == True
    tags:
      - section2
      - section2.6

  - name: 2.7 Create Separate Partition for /var/log (Scored)
    command: grep '\s/var\/log\s' /etc/fstab
    when: partitioning == True
    register: var_log_partition
    failed_when: var_log_partition.rc == 1
    changed_when: False
    ignore_errors: True
    tags:
      - section2
      - section2.7

  - name: 2.8 Create Separate Partition for /var/log/audit (Scored)
    command: grep '\s/var\/log\/audit\s' /etc/fstab
    when: partitioning == True
    register: var_log_audit_partition
    failed_when: var_log_audit_partition.rc == 1
    changed_when: False
    ignore_errors: True
    tags:
      - section2
      - section2.8

  - name: 2.9 Create Separate Partition for /home (Scored)
    command: grep '\s/home\s' /etc/fstab
    when: partitioning == True
    register: home_partition
    failed_when: home_partition.rc == 1
    changed_when: False
    ignore_errors: True
    tags:
      - section2
      - section2.9

  - name: 2.10 Add nodev Option to /home (Scored)
    mount: name="/home" src="/home" state=mounted opts=defaults,nodev fstype="ext4"
    when: partitioning == True
    tags:
      - section2
      - section2.10

  - name: 2.11 Add nodev Option to Removable Media Partitions (Not Scored)
    debug: msg="/!\ Ensure removable partitions have nodev option"
    tags:
      - section2
      - section2.11

  - name: 2.12 Add noexec Option to Removable Media Partitions (Not Scored)
    debug: msg="/!\ Ensure removable partitions have noexec option"
    tags:
      - section2
      - section2.12

  - name: 2.13 Add nosuid Option to Removable Media Partitions (Not Scored)
    debug: msg="/!\ Ensure removable partitions have nosuid option"
    tags:
      - section2
      - section2.13

  - name: 2.14 - 16 Add nodev, nosuid, noexec Options to /run/shm Partition (Scored)
    mount: name="/run/shm" src="/run/shm" state="mounted" opts="defaults,nodev,nosuid,noexec" fstype="tmpfs"
    when: run_shm_read_only == False
    tags:
      - section2
      - section2.14
      - section2.15
      - section2.16

  - name: 2.17.1 Set Sticky Bit on All World-Writable Directories (check) (Scored)
    shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 -print 2>/dev/null
    failed_when: False
    changed_when: False
    always_run: True
    register: sticky_bit_dirs
    tags:
      - section2
      - section2.17

  - name: 2.17.2 Set Sticky Bit on All World-Writable Directories (Scored)
    file:
        path: "{{ item }}"
        mode: "a+t"
    with_items: "{{sticky_bit_dirs.stdout_lines}}"
    tags:
      - section2
      - section2.17

  - name: 2.25.1 Disable Automounting (check) (Scored)
    stat: >
        path=/etc/init/autofs.conf
    register: autofs_file
    tags:
      - section2
      - section2.25

  - name: 2.25.2 Disable Automounting (Scored)
    lineinfile: >
        dest=/etc/init/autofs.conf
        line='#start on runlevel [2345]'
        regexp='start on runlevel'
        state=present
    when: autofs_file.stat.exists == True
    tags:
      - section2
      - section2.25
